// Code generated by protoc-gen-go.
// source: util.proto
// DO NOT EDIT!

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// generic server response, sent when error occurs or as ACK
type ServerResp_Message int32

const (
	ServerResp_SUCCESS            ServerResp_Message = 0
	ServerResp_NAME_EXISTS_ERR    ServerResp_Message = 1
	ServerResp_MALFORMED_ERR      ServerResp_Message = 2
	ServerResp_SERVER_ERR         ServerResp_Message = 3
	ServerResp_NAME_NOT_FOUND_ERR ServerResp_Message = 4
)

var ServerResp_Message_name = map[int32]string{
	0: "SUCCESS",
	1: "NAME_EXISTS_ERR",
	2: "MALFORMED_ERR",
	3: "SERVER_ERR",
	4: "NAME_NOT_FOUND_ERR",
}
var ServerResp_Message_value = map[string]int32{
	"SUCCESS":            0,
	"NAME_EXISTS_ERR":    1,
	"MALFORMED_ERR":      2,
	"SERVER_ERR":         3,
	"NAME_NOT_FOUND_ERR": 4,
}

func (x ServerResp_Message) Enum() *ServerResp_Message {
	p := new(ServerResp_Message)
	*p = x
	return p
}
func (x ServerResp_Message) String() string {
	return proto.EnumName(ServerResp_Message_name, int32(x))
}
func (x *ServerResp_Message) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResp_Message_value, data, "ServerResp_Message")
	if err != nil {
		return err
	}
	*x = ServerResp_Message(value)
	return nil
}
func (ServerResp_Message) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type Hash struct {
	// check that len matches the Hash size in bytes defined in client/server
	Len              *int32   `protobuf:"varint,1,opt,name=len" json:"len,omitempty"`
	Hash             []uint32 `protobuf:"fixed32,2,rep,packed,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Hash) Reset()                    { *m = Hash{} }
func (m *Hash) String() string            { return proto.CompactTextString(m) }
func (*Hash) ProtoMessage()               {}
func (*Hash) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Hash) GetLen() int32 {
	if m != nil && m.Len != nil {
		return *m.Len
	}
	return 0
}

func (m *Hash) GetHash() []uint32 {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Commitment struct {
	Epoch            *uint64  `protobuf:"varint,1,opt,name=epoch" json:"epoch,omitempty"`
	RootHash         *Hash    `protobuf:"bytes,2,opt,name=root_hash" json:"root_hash,omitempty"`
	Signature        []uint32 `protobuf:"fixed32,3,rep,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Commitment) Reset()                    { *m = Commitment{} }
func (m *Commitment) String() string            { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()               {}
func (*Commitment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Commitment) GetEpoch() uint64 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

func (m *Commitment) GetRootHash() *Hash {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *Commitment) GetSignature() []uint32 {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ServerResp struct {
	Message          *ServerResp_Message `protobuf:"varint,1,opt,name=message,enum=common.ServerResp_Message" json:"message,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ServerResp) Reset()                    { *m = ServerResp{} }
func (m *ServerResp) String() string            { return proto.CompactTextString(m) }
func (*ServerResp) ProtoMessage()               {}
func (*ServerResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ServerResp) GetMessage() ServerResp_Message {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ServerResp_SUCCESS
}

type CompleteRootNode struct {
	Left             *Hash   `protobuf:"bytes,1,opt,name=left" json:"left,omitempty"`
	Right            *Hash   `protobuf:"bytes,2,opt,name=right" json:"right,omitempty"`
	Prev             *Hash   `protobuf:"bytes,3,opt,name=prev" json:"prev,omitempty"`
	Epoch            *uint64 `protobuf:"varint,4,opt,name=epoch" json:"epoch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CompleteRootNode) Reset()                    { *m = CompleteRootNode{} }
func (m *CompleteRootNode) String() string            { return proto.CompactTextString(m) }
func (*CompleteRootNode) ProtoMessage()               {}
func (*CompleteRootNode) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CompleteRootNode) GetLeft() *Hash {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *CompleteRootNode) GetRight() *Hash {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *CompleteRootNode) GetPrev() *Hash {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *CompleteRootNode) GetEpoch() uint64 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

// this is the format of commitments that servers exchange
type WitnessedCommitment struct {
	Provider         *string           `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	Comm             *Commitment       `protobuf:"bytes,2,opt,name=comm" json:"comm,omitempty"`
	Root             *CompleteRootNode `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *WitnessedCommitment) Reset()                    { *m = WitnessedCommitment{} }
func (m *WitnessedCommitment) String() string            { return proto.CompactTextString(m) }
func (*WitnessedCommitment) ProtoMessage()               {}
func (*WitnessedCommitment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *WitnessedCommitment) GetProvider() string {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return ""
}

func (m *WitnessedCommitment) GetComm() *Commitment {
	if m != nil {
		return m.Comm
	}
	return nil
}

func (m *WitnessedCommitment) GetRoot() *CompleteRootNode {
	if m != nil {
		return m.Root
	}
	return nil
}

func init() {
	proto.RegisterType((*Hash)(nil), "common.Hash")
	proto.RegisterType((*Commitment)(nil), "common.Commitment")
	proto.RegisterType((*ServerResp)(nil), "common.ServerResp")
	proto.RegisterType((*CompleteRootNode)(nil), "common.CompleteRootNode")
	proto.RegisterType((*WitnessedCommitment)(nil), "common.WitnessedCommitment")
	proto.RegisterEnum("common.ServerResp_Message", ServerResp_Message_name, ServerResp_Message_value)
}

var fileDescriptor1 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x65, 0x93, 0x0d, 0x69, 0xa6, 0x50, 0xcc, 0x14, 0xa1, 0xa8, 0xe2, 0x10, 0xf9, 0x80, 0x82,
	0x84, 0x22, 0x54, 0xf1, 0x03, 0x25, 0xb8, 0x02, 0x89, 0x24, 0xd2, 0xb8, 0x05, 0x6e, 0x56, 0xd4,
	0x4c, 0x63, 0x0b, 0xdb, 0x6b, 0xad, 0xb7, 0xf9, 0x05, 0xae, 0x7c, 0x07, 0x5f, 0xc9, 0xee, 0xda,
	0xc1, 0x01, 0xe5, 0xe6, 0x99, 0xf7, 0x66, 0xde, 0xdb, 0x37, 0x06, 0x78, 0x30, 0x59, 0x3e, 0xab,
	0xb4, 0x32, 0x0a, 0x1f, 0xdf, 0xa9, 0xa2, 0x50, 0x65, 0xf8, 0x0e, 0xe4, 0xa7, 0x75, 0x9d, 0x62,
	0x00, 0xfd, 0x9c, 0xcb, 0xb1, 0x98, 0x88, 0xe9, 0x80, 0xdc, 0x27, 0xbe, 0x04, 0x99, 0x5a, 0x64,
	0xdc, 0x9b, 0xf4, 0xa7, 0xc3, 0x0f, 0xbd, 0x40, 0x90, 0xaf, 0xc3, 0x1f, 0x00, 0x73, 0x3b, 0x9b,
	0x99, 0x82, 0x4b, 0x83, 0x2f, 0x60, 0xc0, 0x95, 0xba, 0x4b, 0xfd, 0xa4, 0xa4, 0xa6, 0xc0, 0x37,
	0x30, 0xd2, 0x4a, 0x99, 0xa4, 0x5d, 0x20, 0xa6, 0xa7, 0x97, 0x4f, 0x66, 0x8d, 0xe2, 0xcc, 0xc9,
	0xd1, 0x89, 0x83, 0xbd, 0xf0, 0x2b, 0x18, 0xd5, 0xd9, 0xb6, 0x5c, 0x9b, 0x07, 0xcd, 0xe3, 0xbe,
	0xd3, 0xa2, 0xae, 0x11, 0xfe, 0x16, 0x00, 0x31, 0xeb, 0x1d, 0x6b, 0xe2, 0xba, 0xc2, 0xf7, 0x30,
	0x2c, 0xb8, 0xae, 0xd7, 0x5b, 0xf6, 0x7a, 0x67, 0x97, 0x17, 0xfb, 0xad, 0x1d, 0x69, 0xb6, 0x68,
	0x18, 0xb4, 0xa7, 0x86, 0xf7, 0x30, 0x6c, 0x7b, 0x78, 0x0a, 0xc3, 0xf8, 0x76, 0x3e, 0x8f, 0xe2,
	0x38, 0x78, 0x84, 0xe7, 0xf0, 0x6c, 0x79, 0xb5, 0x88, 0x92, 0xe8, 0xfb, 0xe7, 0xf8, 0x26, 0x4e,
	0x22, 0xa2, 0x40, 0xe0, 0x73, 0x78, 0xba, 0xb8, 0xfa, 0x72, 0xbd, 0xa2, 0x45, 0xf4, 0xd1, 0xb7,
	0x7a, 0x78, 0x66, 0x3d, 0x44, 0xf4, 0x35, 0x22, 0x5f, 0xf7, 0x6d, 0x32, 0xe8, 0xe7, 0x96, 0xab,
	0x9b, 0xe4, 0x7a, 0x75, 0xbb, 0x6c, 0x78, 0x32, 0xfc, 0x25, 0x20, 0xb0, 0xd1, 0x54, 0x39, 0x1b,
	0x26, 0xfb, 0xbe, 0xa5, 0xda, 0x30, 0x4e, 0x40, 0xe6, 0x7c, 0x6f, 0xbc, 0xdf, 0xff, 0x53, 0xf0,
	0x08, 0x86, 0x30, 0xd0, 0xd9, 0x36, 0x35, 0x47, 0x83, 0x6a, 0x20, 0xb7, 0xa5, 0xd2, 0xbc, 0xb3,
	0x01, 0x1d, 0xd9, 0xe2, 0x90, 0xee, 0x10, 0xf2, 0xe0, 0x10, 0xe1, 0x4f, 0x01, 0xe7, 0xdf, 0x32,
	0x53, 0xda, 0xe7, 0xf3, 0xe6, 0xe0, 0x6c, 0x17, 0x70, 0x62, 0xff, 0x83, 0x5d, 0xb6, 0x61, 0xed,
	0x9d, 0x8d, 0xe8, 0x6f, 0x8d, 0xaf, 0x41, 0xba, 0xf5, 0xad, 0x1d, 0xdc, 0x6b, 0x75, 0xd3, 0xe4,
	0x71, 0x7c, 0x0b, 0xd2, 0x5d, 0xb1, 0xf5, 0x34, 0x3e, 0xe0, 0xfd, 0x93, 0x00, 0x79, 0xd6, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xbe, 0xfa, 0x04, 0x7d, 0x02, 0x00, 0x00,
}
